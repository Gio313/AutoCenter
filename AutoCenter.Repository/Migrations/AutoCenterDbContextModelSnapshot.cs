// <auto-generated />
using System;
using AutoCenter.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AutoCenter.Repository.Migrations
{
    [DbContext(typeof(AutoCenterDbContext))]
    partial class AutoCenterDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("AutoCenter.Domain.Models.Automobile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Colour")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Mark")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("RecordDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<decimal>("RentFee")
                        .HasColumnType("money");

                    b.Property<string>("StateNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Automobiles");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("ID");

                    b.HasIndex("CategoryName")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DrivingLicenceCategory")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DrivingLicenceNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PersonalNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("RecordDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("ID");

                    b.HasIndex("PersonalNumber")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PersonalNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("PersonalNumber")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AdministrationEmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderDate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("OrderStatusID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AdministrationEmployeeID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("OrderStatusID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.OrderDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AutomibileID")
                        .HasColumnType("int");

                    b.Property<int>("AutomobileID")
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("RentFee")
                        .HasColumnType("money");

                    b.HasKey("ID");

                    b.HasIndex("AutomibileID");

                    b.HasIndex("OrderID", "AutomobileID")
                        .IsUnique();

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.OrderStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("StatusName")
                        .IsUnique();

                    b.ToTable("OrderStatuses");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.AdministrationEmployee", b =>
                {
                    b.HasBaseType("AutoCenter.Domain.Models.Employee");

                    b.Property<string>("Education")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.ToTable("AdministrationEmployees");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.Driver", b =>
                {
                    b.HasBaseType("AutoCenter.Domain.Models.Employee");

                    b.Property<string>("DrivingLicenceCategory")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DrivingLicenceNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.Technician", b =>
                {
                    b.HasBaseType("AutoCenter.Domain.Models.Employee");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("DrivingLicenceCategory")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DrivingLicenceNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Experience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("CategoryID");

                    b.ToTable("Technicians");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.DriversInOrderDetail", b =>
                {
                    b.HasBaseType("AutoCenter.Domain.Models.OrderDetail");

                    b.Property<int>("DriverID")
                        .HasColumnType("int");

                    b.Property<decimal>("DriverRent")
                        .HasColumnType("money");

                    b.HasIndex("DriverID");

                    b.ToTable("DriversInOrderDetails");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.Automobile", b =>
                {
                    b.HasOne("AutoCenter.Domain.Models.Category", "Category")
                        .WithMany("Automobiles")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.Order", b =>
                {
                    b.HasOne("AutoCenter.Domain.Models.AdministrationEmployee", "AdministrationEmployee")
                        .WithMany("Orders")
                        .HasForeignKey("AdministrationEmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoCenter.Domain.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoCenter.Domain.Models.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdministrationEmployee");

                    b.Navigation("Customer");

                    b.Navigation("OrderStatus");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.OrderDetail", b =>
                {
                    b.HasOne("AutoCenter.Domain.Models.Automobile", "Automobile")
                        .WithMany("OrderDetails")
                        .HasForeignKey("AutomibileID");

                    b.HasOne("AutoCenter.Domain.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Automobile");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.AdministrationEmployee", b =>
                {
                    b.HasOne("AutoCenter.Domain.Models.Employee", null)
                        .WithOne()
                        .HasForeignKey("AutoCenter.Domain.Models.AdministrationEmployee", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.Driver", b =>
                {
                    b.HasOne("AutoCenter.Domain.Models.Employee", null)
                        .WithOne()
                        .HasForeignKey("AutoCenter.Domain.Models.Driver", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.Technician", b =>
                {
                    b.HasOne("AutoCenter.Domain.Models.Category", "Category")
                        .WithMany("Technicians")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoCenter.Domain.Models.Employee", null)
                        .WithOne()
                        .HasForeignKey("AutoCenter.Domain.Models.Technician", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.DriversInOrderDetail", b =>
                {
                    b.HasOne("AutoCenter.Domain.Models.Driver", "Driver")
                        .WithMany("DriversInOrderDetails")
                        .HasForeignKey("DriverID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoCenter.Domain.Models.OrderDetail", null)
                        .WithOne()
                        .HasForeignKey("AutoCenter.Domain.Models.DriversInOrderDetail", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.Automobile", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.Category", b =>
                {
                    b.Navigation("Automobiles");

                    b.Navigation("Technicians");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.AdministrationEmployee", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("AutoCenter.Domain.Models.Driver", b =>
                {
                    b.Navigation("DriversInOrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
